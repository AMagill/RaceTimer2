#include "font_myriadProCond_6pt.h"

// 
//  Font data for Myriad Pro Cond 6pt
// 

// Character bitmaps for Myriad Pro Cond 6pt
const uint8_t myriadProCond_6ptBitmaps[] = 
{
	// @0 '!' (1 pixels wide)
	// #
	// #
	// #
	// #
	//  
	// #
	//  
	//  
	0x2F, 

	// @1 '"' (2 pixels wide)
	// # 
	//  #
	//   
	//   
	//   
	//   
	//   
	//   
	0x01, 0x02, 

	// @3 '#' (3 pixels wide)
	//  # 
	//  ##
	// ###
	// # #
	// ###
	// ## 
	//    
	//    
	0x3C, 0x37, 0x1E, 

	// @6 '$' (3 pixels wide)
	//  # 
	//  ##
	// #  
	//  # 
	//   #
	// ## 
	//  # 
	//    
	0x24, 0x6B, 0x12, 

	// @9 '%' (5 pixels wide)
	//  # # 
	// ## # 
	// ###  
	//   # #
	//  #  #
	//  # # 
	//      
	//      
	0x06, 0x37, 0x0C, 0x23, 0x18, 

	// @14 '&' (4 pixels wide)
	//  #  
	// # # 
	//  #  
	// ## #
	// # ##
	//  ###
	//     
	//     
	0x1A, 0x2D, 0x32, 0x38, 

	// @18 ''' (1 pixels wide)
	// #
	// #
	//  
	//  
	//  
	//  
	//  
	//  
	0x03, 

	// @19 '(' (2 pixels wide)
	//  #
	// # 
	// # 
	// # 
	// # 
	//  #
	//   
	//   
	0x1E, 0x21, 

	// @21 ')' (2 pixels wide)
	// # 
	//  #
	//  #
	//  #
	//  #
	// # 
	//   
	//   
	0x21, 0x1E, 

	// @23 '*' (3 pixels wide)
	// ## 
	//  # 
	// # #
	//    
	//    
	//    
	//    
	//    
	0x05, 0x03, 0x04, 

	// @26 '+' (5 pixels wide)
	//      
	//   #  
	//   #  
	// #####
	//   #  
	//   #  
	//      
	//      
	0x08, 0x08, 0x3E, 0x08, 0x08, 

	// @31 ',' (1 pixels wide)
	//  
	//  
	//  
	//  
	//  
	// #
	// #
	//  
	0x60, 

	// @32 '-' (2 pixels wide)
	//   
	//   
	//   
	// ##
	//   
	//   
	//   
	//   
	0x08, 0x08, 

	// @34 '.' (1 pixels wide)
	//  
	//  
	//  
	//  
	//  
	// #
	//  
	//  
	0x20, 

	// @35 '/' (2 pixels wide)
	//  #
	//  #
	//  #
	// # 
	// # 
	// # 
	//   
	//   
	0x38, 0x07, 

	// @37 '0' (3 pixels wide)
	//  # 
	// # #
	// # #
	// # #
	// # #
	//  # 
	//    
	//    
	0x1E, 0x21, 0x1E, 

	// @40 '1' (2 pixels wide)
	// ##
	//  #
	//  #
	//  #
	//  #
	//  #
	//   
	//   
	0x01, 0x3F, 

	// @42 '2' (3 pixels wide)
	// ## 
	//   #
	//   #
	//  # 
	//  # 
	// ###
	//    
	//    
	0x21, 0x39, 0x26, 

	// @45 '3' (3 pixels wide)
	//  # 
	//   #
	//   #
	//  # 
	//   #
	// ## 
	//    
	//    
	0x20, 0x29, 0x16, 

	// @48 '4' (4 pixels wide)
	//   # 
	//  ## 
	// # # 
	// # # 
	// ####
	//   # 
	//     
	//     
	0x1C, 0x12, 0x3F, 0x10, 

	// @52 '5' (3 pixels wide)
	//  ##
	// #  
	// ## 
	//   #
	//   #
	// ## 
	//    
	//    
	0x26, 0x25, 0x19, 

	// @55 '6' (3 pixels wide)
	//  ##
	// #  
	// ## 
	// # #
	// # #
	//  # 
	//    
	//    
	0x1E, 0x25, 0x19, 

	// @58 '7' (3 pixels wide)
	// ###
	//   #
	//  # 
	//  # 
	//  # 
	// #  
	//    
	//    
	0x21, 0x1D, 0x03, 

	// @61 '8' (3 pixels wide)
	//  # 
	// # #
	//  ##
	// # #
	// # #
	//  # 
	//    
	//    
	0x1A, 0x25, 0x1E, 

	// @64 '9' (3 pixels wide)
	//  # 
	// # #
	// # #
	//  ##
	//   #
	// ## 
	//    
	//    
	0x26, 0x29, 0x1E, 

	// @67 ':' (1 pixels wide)
	//  
	//  
	// #
	//  
	//  
	// #
	//  
	//  
	0x24, 

	// @68 ';' (1 pixels wide)
	//  
	//  
	// #
	//  
	//  
	// #
	// #
	//  
	0x64, 

	// @69 '<' (4 pixels wide)
	//     
	//     
	//   ##
	// ##  
	//  ## 
	//    #
	//     
	//     
	0x08, 0x18, 0x14, 0x24, 

	// @73 '=' (4 pixels wide)
	//     
	//     
	// ####
	//     
	// ####
	//     
	//     
	//     
	0x14, 0x14, 0x14, 0x14, 

	// @77 '>' (4 pixels wide)
	//     
	//     
	// ##  
	//   ##
	//  ## 
	// #   
	//     
	//     
	0x24, 0x14, 0x18, 0x08, 

	// @81 '?' (2 pixels wide)
	// # 
	//  #
	//  #
	// # 
	//   
	//  #
	//   
	//   
	0x09, 0x26, 

	// @83 '@' (5 pixels wide)
	//      
	//  ### 
	// #   #
	// # # #
	// ### #
	// #  # 
	//  #   
	//      
	0x3C, 0x52, 0x1A, 0x22, 0x1C, 

	// @88 'A' (3 pixels wide)
	//  # 
	//  # 
	// # #
	// # #
	//  # 
	// # #
	//    
	//    
	0x2C, 0x13, 0x2C, 

	// @91 'B' (3 pixels wide)
	// ## 
	// # #
	// # #
	// ## 
	// # #
	// ## 
	//    
	//    
	0x3F, 0x29, 0x16, 

	// @94 'C' (3 pixels wide)
	//  ##
	// #  
	// #  
	// #  
	// #  
	//  ##
	//    
	//    
	0x1E, 0x21, 0x21, 

	// @97 'D' (3 pixels wide)
	// ## 
	// # #
	// # #
	// # #
	// # #
	// ## 
	//    
	//    
	0x3F, 0x21, 0x1E, 

	// @100 'E' (2 pixels wide)
	// ##
	// # 
	// # 
	// ##
	// # 
	// ##
	//   
	//   
	0x3F, 0x29, 

	// @102 'F' (2 pixels wide)
	// ##
	// # 
	// # 
	// ##
	// # 
	// # 
	//   
	//   
	0x3F, 0x09, 

	// @104 'G' (3 pixels wide)
	//  ##
	// #  
	// #  
	// # #
	// # #
	//  ##
	//    
	//    
	0x1E, 0x21, 0x39, 

	// @107 'H' (3 pixels wide)
	// # #
	// # #
	// # #
	// ###
	// # #
	// # #
	//    
	//    
	0x3F, 0x08, 0x3F, 

	// @110 'I' (1 pixels wide)
	// #
	// #
	// #
	// #
	// #
	// #
	//  
	//  
	0x3F, 

	// @111 'J' (2 pixels wide)
	//  #
	//  #
	//  #
	//  #
	//  #
	// # 
	//   
	//   
	0x20, 0x1F, 

	// @113 'K' (3 pixels wide)
	// # #
	// # #
	// ## 
	// ## 
	// # #
	// # #
	//    
	//    
	0x3F, 0x0C, 0x33, 

	// @116 'L' (2 pixels wide)
	// # 
	// # 
	// # 
	// # 
	// # 
	// ##
	//   
	//   
	0x3F, 0x20, 

	// @118 'M' (4 pixels wide)
	// #  #
	// ## #
	// ####
	// ####
	// ## #
	//  # #
	//     
	//     
	0x1F, 0x3E, 0x0C, 0x3F, 

	// @122 'N' (3 pixels wide)
	// # #
	// # #
	// ###
	// ###
	// # #
	// # #
	//    
	//    
	0x3F, 0x0C, 0x3F, 

	// @125 'O' (3 pixels wide)
	//  # 
	// # #
	// # #
	// # #
	// # #
	//  # 
	//    
	//    
	0x1E, 0x21, 0x1E, 

	// @128 'P' (3 pixels wide)
	// ## 
	// # #
	// # #
	// ## 
	// #  
	// #  
	//    
	//    
	0x3F, 0x09, 0x06, 

	// @131 'Q' (3 pixels wide)
	//  # 
	// # #
	// # #
	// # #
	// # #
	//  # 
	//   #
	//    
	0x1E, 0x21, 0x5E, 

	// @134 'R' (3 pixels wide)
	// ## 
	// # #
	// # #
	// ## 
	// # #
	// # #
	//    
	//    
	0x3F, 0x09, 0x36, 

	// @137 'S' (3 pixels wide)
	//  ##
	// #  
	// ## 
	//   #
	//   #
	// ## 
	//    
	//    
	0x26, 0x25, 0x19, 

	// @140 'T' (3 pixels wide)
	// ###
	//  # 
	//  # 
	//  # 
	//  # 
	//  # 
	//    
	//    
	0x01, 0x3F, 0x01, 

	// @143 'U' (3 pixels wide)
	// # #
	// # #
	// # #
	// # #
	// # #
	//  # 
	//    
	//    
	0x1F, 0x20, 0x1F, 

	// @146 'V' (3 pixels wide)
	// # #
	// # #
	// # #
	// # #
	//  # 
	//  # 
	//    
	//    
	0x0F, 0x30, 0x0F, 

	// @149 'W' (5 pixels wide)
	// # # #
	// # # #
	// # # #
	//  # ##
	//  # # 
	//  # # 
	//      
	//      
	0x07, 0x38, 0x07, 0x38, 0x0F, 

	// @154 'X' (3 pixels wide)
	// # #
	// # #
	//  # 
	//  # 
	// # #
	// # #
	//    
	//    
	0x33, 0x0C, 0x33, 

	// @157 'Y' (3 pixels wide)
	// # #
	// # #
	//  # 
	//  # 
	//  # 
	//  # 
	//    
	//    
	0x03, 0x3C, 0x03, 

	// @160 'Z' (3 pixels wide)
	// ###
	//   #
	//  # 
	//  # 
	// #  
	// ###
	//    
	//    
	0x31, 0x2D, 0x23, 

	// @163 '[' (2 pixels wide)
	// ##
	// # 
	// # 
	// # 
	// # 
	// # 
	// ##
	//   
	0x7F, 0x41, 

	// @165 '\' (2 pixels wide)
	// # 
	// # 
	// # 
	//  #
	//  #
	//  #
	//   
	//   
	0x07, 0x38, 

	// @167 ']' (2 pixels wide)
	// ##
	//  #
	//  #
	//  #
	//  #
	//  #
	// ##
	//   
	0x41, 0x7F, 

	// @169 '^' (4 pixels wide)
	//   # 
	//  ## 
	// #  #
	// #  #
	//     
	//     
	//     
	//     
	0x0C, 0x02, 0x03, 0x0C, 

	// @173 '_' (4 pixels wide)
	//     
	//     
	//     
	//     
	//     
	//     
	// ####
	//     
	0x40, 0x40, 0x40, 0x40, 

	// @177 '`' (1 pixels wide)
	// #
	//  
	//  
	//  
	//  
	//  
	//  
	//  
	0x01, 

	// @178 'a' (3 pixels wide)
	//    
	//    
	// ## 
	//  ##
	// # #
	//  ##
	//    
	//    
	0x14, 0x2C, 0x38, 

	// @181 'b' (3 pixels wide)
	// #  
	// #  
	// ## 
	// # #
	// # #
	// ## 
	//    
	//    
	0x3F, 0x24, 0x18, 

	// @184 'c' (2 pixels wide)
	//   
	//   
	//  #
	// # 
	// # 
	//  #
	//   
	//   
	0x18, 0x24, 

	// @186 'd' (3 pixels wide)
	//   #
	//   #
	//  ##
	// # #
	// # #
	//  ##
	//    
	//    
	0x18, 0x24, 0x3F, 

	// @189 'e' (3 pixels wide)
	//    
	//    
	//  # 
	// ###
	// #  
	//  ##
	//    
	//    
	0x18, 0x2C, 0x28, 

	// @192 'f' (2 pixels wide)
	//  #
	// # 
	// ##
	// # 
	// # 
	// # 
	//   
	//   
	0x3E, 0x05, 

	// @194 'g' (3 pixels wide)
	//    
	//    
	//  ##
	// # #
	// # #
	//  ##
	//   #
	// ## 
	0x98, 0xA4, 0x7C, 

	// @197 'h' (3 pixels wide)
	// #  
	// #  
	// ## 
	// # #
	// # #
	// # #
	//    
	//    
	0x3F, 0x04, 0x38, 

	// @200 'i' (1 pixels wide)
	// #
	//  
	// #
	// #
	// #
	// #
	//  
	//  
	0x3D, 

	// @201 'j' (2 pixels wide)
	//  #
	//   
	//  #
	//  #
	//  #
	//  #
	//  #
	// # 
	0x80, 0x7D, 

	// @203 'k' (3 pixels wide)
	// #  
	// #  
	// # #
	// ## 
	// ## 
	// # #
	//    
	//    
	0x3F, 0x18, 0x24, 

	// @206 'l' (1 pixels wide)
	// #
	// #
	// #
	// #
	// #
	// #
	//  
	//  
	0x3F, 

	// @207 'm' (5 pixels wide)
	//      
	//      
	// ## # 
	// # # #
	// # # #
	// # # #
	//      
	//      
	0x3C, 0x04, 0x38, 0x04, 0x38, 

	// @212 'n' (3 pixels wide)
	//    
	//    
	// ## 
	// # #
	// # #
	// # #
	//    
	//    
	0x3C, 0x04, 0x38, 

	// @215 'o' (3 pixels wide)
	//    
	//    
	//  # 
	// # #
	// # #
	//  # 
	//    
	//    
	0x18, 0x24, 0x18, 

	// @218 'p' (3 pixels wide)
	//    
	//    
	// ## 
	// # #
	// # #
	// ## 
	// #  
	// #  
	0xFC, 0x24, 0x18, 

	// @221 'q' (3 pixels wide)
	//    
	//    
	//  ##
	// # #
	// # #
	//  ##
	//   #
	//   #
	0x18, 0x24, 0xFC, 

	// @224 'r' (2 pixels wide)
	//   
	//   
	// ##
	// # 
	// # 
	// # 
	//   
	//   
	0x3C, 0x04, 

	// @226 's' (3 pixels wide)
	//    
	//    
	//  ##
	// ## 
	//   #
	// ## 
	//    
	//    
	0x28, 0x2C, 0x14, 

	// @229 't' (2 pixels wide)
	//   
	// # 
	// ##
	// # 
	// # 
	//  #
	//   
	//   
	0x1E, 0x24, 

	// @231 'u' (3 pixels wide)
	//    
	//    
	// # #
	// # #
	// # #
	//  ##
	//    
	//    
	0x1C, 0x20, 0x3C, 

	// @234 'v' (3 pixels wide)
	//    
	//    
	// # #
	// # #
	//  # 
	//  # 
	//    
	//    
	0x0C, 0x30, 0x0C, 

	// @237 'w' (4 pixels wide)
	//     
	//     
	// # # 
	// # ##
	// ####
	//  #  
	//     
	//     
	0x1C, 0x30, 0x1C, 0x18, 

	// @241 'x' (3 pixels wide)
	//    
	//    
	// # #
	//  # 
	//  # 
	// # #
	//    
	//    
	0x24, 0x18, 0x24, 

	// @244 'y' (3 pixels wide)
	//    
	//    
	// # #
	// # #
	//  # 
	//  # 
	//  # 
	// #  
	0x8C, 0x70, 0x0C, 

	// @247 'z' (2 pixels wide)
	//   
	//   
	// ##
	//  #
	// # 
	// ##
	//   
	//   
	0x34, 0x2C, 

	// @249 '{' (2 pixels wide)
	//  #
	// # 
	//  #
	// # 
	//  #
	// # 
	//  #
	//   
	0x2A, 0x55, 

	// @251 '|' (1 pixels wide)
	// #
	// #
	// #
	// #
	// #
	// #
	// #
	// #
	0xFF, 

	// @252 '}' (2 pixels wide)
	// # 
	//  #
	// # 
	//  #
	// # 
	//  #
	// # 
	//   
	0x55, 0x2A, 

	// @254 '~' (4 pixels wide)
	//     
	//     
	//     
	//  # #
	// # # 
	//     
	//     
	//     
	0x10, 0x08, 0x10, 0x08, 
};

// Character descriptors for Myriad Pro Cond 6pt
// { [Char width in bits], [Offset into myriadProCond_6ptCharBitmaps in bytes] }
const FONT_CHAR_INFO myriadProCond_6ptDescriptors[] = 
{
	{1, 0}, 		// ! 
	{2, 1}, 		// " 
	{3, 3}, 		// # 
	{3, 6}, 		// $ 
	{5, 9}, 		// % 
	{4, 14}, 		// & 
	{1, 18}, 		// ' 
	{2, 19}, 		// ( 
	{2, 21}, 		// ) 
	{3, 23}, 		// * 
	{5, 26}, 		// + 
	{1, 31}, 		// , 
	{2, 32}, 		// - 
	{1, 34}, 		// . 
	{2, 35}, 		// / 
	{3, 37}, 		// 0 
	{2, 40}, 		// 1 
	{3, 42}, 		// 2 
	{3, 45}, 		// 3 
	{4, 48}, 		// 4 
	{3, 52}, 		// 5 
	{3, 55}, 		// 6 
	{3, 58}, 		// 7 
	{3, 61}, 		// 8 
	{3, 64}, 		// 9 
	{1, 67}, 		// : 
	{1, 68}, 		// ; 
	{4, 69}, 		// < 
	{4, 73}, 		// = 
	{4, 77}, 		// > 
	{2, 81}, 		// ? 
	{5, 83}, 		// @ 
	{3, 88}, 		// A 
	{3, 91}, 		// B 
	{3, 94}, 		// C 
	{3, 97}, 		// D 
	{2, 100}, 		// E 
	{2, 102}, 		// F 
	{3, 104}, 		// G 
	{3, 107}, 		// H 
	{1, 110}, 		// I 
	{2, 111}, 		// J 
	{3, 113}, 		// K 
	{2, 116}, 		// L 
	{4, 118}, 		// M 
	{3, 122}, 		// N 
	{3, 125}, 		// O 
	{3, 128}, 		// P 
	{3, 131}, 		// Q 
	{3, 134}, 		// R 
	{3, 137}, 		// S 
	{3, 140}, 		// T 
	{3, 143}, 		// U 
	{3, 146}, 		// V 
	{5, 149}, 		// W 
	{3, 154}, 		// X 
	{3, 157}, 		// Y 
	{3, 160}, 		// Z 
	{2, 163}, 		// [ 
	{2, 165}, 		// \ x
	{2, 167}, 		// ] 
	{4, 169}, 		// ^ 
	{4, 173}, 		// _ 
	{1, 177}, 		// ` 
	{3, 178}, 		// a 
	{3, 181}, 		// b 
	{2, 184}, 		// c 
	{3, 186}, 		// d 
	{3, 189}, 		// e 
	{2, 192}, 		// f 
	{3, 194}, 		// g 
	{3, 197}, 		// h 
	{1, 200}, 		// i 
	{2, 201}, 		// j 
	{3, 203}, 		// k 
	{1, 206}, 		// l 
	{5, 207}, 		// m 
	{3, 212}, 		// n 
	{3, 215}, 		// o 
	{3, 218}, 		// p 
	{3, 221}, 		// q 
	{2, 224}, 		// r 
	{3, 226}, 		// s 
	{2, 229}, 		// t 
	{3, 231}, 		// u 
	{3, 234}, 		// v 
	{4, 237}, 		// w 
	{3, 241}, 		// x 
	{3, 244}, 		// y 
	{2, 247}, 		// z 
	{2, 249}, 		// { 
	{1, 251}, 		// | 
	{2, 252}, 		// } 
	{4, 254}, 		// ~ 
};

// Font information for Myriad Pro Cond 6pt
const FONT_INFO myriadProCond_6ptFontInfo =
{
	1, //  Character height
	'!', //  Start character
	'~', //  End character
	2, //  Width, in pixels, of space character
	myriadProCond_6ptDescriptors, //  Character descriptor array
	myriadProCond_6ptBitmaps, //  Character bitmap array
};



